apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    app: ${project.artifactId}
  name: ${project.artifactId}
spec:
  replicas: 1
  selector:
    app: ${project.artifactId}
  strategy:
    resources:
      limits:
        memory: "256Mi"
      requests:
        memory: "20Mi"
    type: Recreate
  template:
    metadata:
      name: ${project.artifactId}
      labels:
        app: ${project.artifactId}
        syndesis.io/type: datavirtualization
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9779"
    spec:
      containers:
      - name: spring-boot
        env:
        - name: JAVA_APP_DIR
          value: /deployments
        - name: JAVA_OPTIONS
          value: "-Djava.net.preferIPv4Stack=true -Duser.home=/tmp -Djava.net.preferIPv4Addresses=true"
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace             
        - name: SPRING_TEIID_REST_SAPDB_ENDPOINT
          value: http://rdbms-springboot-syndesis.192.168.42.73.nip.io/odata
        - name: JAVA_DEBUG
          value: "true"
        - name: AB_JMX_EXPORTER_CONFIG
          value: "prometheus-config.yml"
        image: ${project.artifactId}:${project.version}
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            port: 8080
            path: "/actuator/health"
          initialDelaySeconds: 60
          periodSeconds: 20
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: "/actuator/health"
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 20
          timeoutSeconds: 5
        ports:
        - containerPort: 35432
          name: pg
        - containerPort: 31000
          name: teiid
        - containerPort: 8080
          name: http
        - containerPort: 9779
          name: prometheus
        - containerPort: 8778
          name: jolokia
        workingDir: /deployments
        resources:
          requests:
            memory: 256Mi
            cpu: "0.2"
          limits:
            memory: 512Mi
            cpu: "1.0"
  triggers:
  - imageChangeParams:
      automatic: true
      containerNames:
      -  ${project.artifactId}
      from:
        kind: ImageStreamTag
        name: ${project.artifactId}:${project.version}
    type: ImageChange
  - type: ConfigChange
